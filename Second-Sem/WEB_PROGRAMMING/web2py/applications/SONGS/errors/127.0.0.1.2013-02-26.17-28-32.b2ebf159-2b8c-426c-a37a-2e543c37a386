(dp1
S'output'
p2
S"<type 'exceptions.ValueError'> invalid literal for int() with base 10: 'man mera'"
p3
sS'layer'
p4
S'/home/gaurav/classwork/WEB_PROGRAMMING/web2py/applications/SONGS/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simple replace the two lines below with:\n    return auth.wiki()\n    """\n    response.flash = T("Welcome to web2py!")\n    return dict(message=T(\'Hello World\'))\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\n\ndef update_len2():\n     form=SQLFORM(db.songs,request.args[0])                   #  FOR ALL THE WEB2PY AUTOMATICALLY CREATES A DEFAULT WEB PAGE\n     if form.accepts(request.vars,session):                   # THE SEND INFORMATION STORED IN REQUEST.VARS OF THAT SESSION\n\t  update_songs(request)           # THIS FUNCTION IS CALLED AT 2 TIME AND WHEN IT COMES BACK NO FORM IS RETURNED ASK....\n     elif form.errors:\n\t  response.flash=\'ERROR!!!\'\n     return dict(form=form)\t\t\t\t\t\t\t      #  IT WILL AUTOMATICALLY UPDATE\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef update_len():\n     form=SQLFORM.factory(\n\t       db.Field(\'name\',db.songs,requires=IS_IN_DB(db,\'songs.id\',\'songs.name\'),required=True,label=\'Select Song\'),\n\t       db.Field(\'length\',\'double\'))\n     if form.accepts(request.vars,session):                   # THE SEND INFORMATION STORED IN REQUEST.VARS OF THAT SESSION\n\t  update_songs(request)           # THIS FUNCTION IS CALLED AT 2 TIME AND WHEN IT COMES BACK NO FORM IS RETURNED ASK....\n     elif form.errors:\n\t  response.flash=\'ERROR!!!\'\n     return dict(form=form)\n\ndef show_songs():\n     return dict(songs=db().select(db.songs.name,db.songs.duration))\n\n\ndef update_songs(request):\n     db(db.songs.id==request.post_vars[\'name\']).update(duration=request.post_vars[\'length\'])\n     redirect(URL(\'show_songs\'))\n\n\nresponse._vars=response._caller(update_len2)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/gaurav/classwork/WEB_PROGRAMMING/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/gaurav/classwork/WEB_PROGRAMMING/web2py/applications/SONGS/controllers/default.py", line 121, in <module>\n  File "/home/gaurav/classwork/WEB_PROGRAMMING/web2py/gluon/globals.py", line 193, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/gaurav/classwork/WEB_PROGRAMMING/web2py/applications/SONGS/controllers/default.py", line 81, in update_len2\n    update_songs(request)           # THIS FUNCTION IS CALLED AT 2 TIME AND WHEN IT COMES BACK NO FORM IS RETURNED ASK....\n  File "/home/gaurav/classwork/WEB_PROGRAMMING/web2py/applications/SONGS/controllers/default.py", line 117, in update_songs\n    db(db.songs.id==request.post_vars[\'name\']).update(duration=request.post_vars[\'length\'])\n  File "/home/gaurav/classwork/WEB_PROGRAMMING/web2py/gluon/dal.py", line 8929, in update\n    ret = db._adapter.update(tablename,self.query,fields)\n  File "/home/gaurav/classwork/WEB_PROGRAMMING/web2py/gluon/dal.py", line 1386, in update\n    sql = self._update(tablename, query, fields)\n  File "/home/gaurav/classwork/WEB_PROGRAMMING/web2py/gluon/dal.py", line 1377, in _update\n    sql_w = \' WHERE \' + self.expand(query)\n  File "/home/gaurav/classwork/WEB_PROGRAMMING/web2py/gluon/dal.py", line 1311, in expand\n    return op(first, second)\n  File "/home/gaurav/classwork/WEB_PROGRAMMING/web2py/gluon/dal.py", line 1239, in EQ\n    self.expand(second, first.type))\n  File "/home/gaurav/classwork/WEB_PROGRAMMING/web2py/gluon/dal.py", line 1321, in expand\n    return str(self.represent(expression,field_type))\n  File "/home/gaurav/classwork/WEB_PROGRAMMING/web2py/gluon/dal.py", line 1746, in represent\n    return str(int(obj))\nValueError: invalid literal for int() with base 10: \'man mera\'\n'
p11
s.
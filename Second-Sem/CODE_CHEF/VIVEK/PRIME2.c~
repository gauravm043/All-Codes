#include <stdio.h>
#include <math.h>
 
 
int a[39] = {2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,137,139,149,151,157,163,167,173};
 
int PRIME_LESS_THAN[31623] = {0};
int SIZE = 0;
int p[30000];
void generate(int lower,int upper,int *PRIME_IN_RANGE)
{
int SIZE=30000;
int i;
int k;
int diff=upper-lower+1;
int m;
for(i=0; i<SIZE; i++)
	  {
	       if(upper>p[i])
	       {
		    div = (double)(lower)/p[i];
		    k=ceil(div);
		    if(k==1)
			 m=p[i]*2-lower;
		    else
			 m=p[i]*k-lower;	//Can be treated as hash fn
		    while(m < diff)
		    {
			 PRIME_IN_RANGE[m]=1;
			 m+=p[i];
		    }
	       }
	  }


}

int main()
{
     int i, size, m ,lower, upper, k;
     double div;
     int PRIME_IN_RANGE[100000] = {0};
     int diff;
     PRIME_LESS_THAN[0]=1;
     PRIME_LESS_THAN[1]=1;
     for(i=0; i < 39; i++)
     {
	  m=2*a[i];
	  while(m<31623)
	  {
	       PRIME_LESS_THAN[m]=1;
	       m = m + a[i];
	  }
     }
     for(i=2; i<31623; i++)
     {
	  if(PRIME_LESS_THAN[i]==0)
	       p[SIZE++] = i;
     }
     for(i=0;i<SIZE;i++)
	  printf("%d\n",p[i]);
     scanf("%d", &size);
     while(size--)
     {
	  scanf("%d%d", &lower, &upper);
	  diff = upper - lower +1;
	  for(i=0; i< diff; i++)
	       r[i]=0;
	  if(lower==1)
	       r[0]=1;
	  
	  for(i=0; i<diff; i++)
	       if(PRIME_IN_RANGE[i]==0)
		    printf("%d\n", lower+i);
	  printf("\n");
     }
     return 0;
}

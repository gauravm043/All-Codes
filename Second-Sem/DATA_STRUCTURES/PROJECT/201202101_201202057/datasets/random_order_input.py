#!/usr/bin/python

#Udyan Khurana - 201202101

#This program is used for generating input files for testing the bloom filter
#The output files are then generated by redirecting the inputs to the bloom filter executable containing only execution time
#The 'times' are then extracted from the output file and used for plotting the graph using python libraries

import random
import matplotlib.pyplot as plt
plt.figure
import os

#make the input files for 'n' varying from 1 to 100000 
for i in range(1,100000,100):
	a=''
	for j in range(100000):
		p=random.randint(1,100000000)
		a+='%s '%(p)
	f=open('input%s'%(i),'w')
	f.write('%s\n'%(i))
	f.write(a)		#for input numbers
	a=''
	for j in range(1000000):
		p=random.randint(1,100000000)
		a+='%s '%(p)
	f.write('\n%s\n'%(i))
	f.write(a)		#for query values
	f.close()
	os.system('mv input%s input_files/'%(i))

#make the output files for the given input files

for i in range(1,100000,100):
	os.system('./a.out<input_files/input%s>out_files/out%s'%(i,i))


#the x axis of the graph
x_series=[]
for i in range(1,100000,100):
	x_series.append(i)

# extracting the output times from the output files and storing in the list for the y-axis
y_series=[]
for i in range(1,100000,100):
	f=open('out_files/out%s'%(i),'r')
	q=f.readline()
	y_series.append(float(q[:-1]))



#plot data
plt.plot(x_series, y_series, label="Time Taken")
 
#add in labels and title
plt.xlabel("Input Size (n)")
plt.ylabel("Time Taken (s)")
plt.title("ANALYSIS")
 
#add limits to the x and y axis
plt.xlim(0, 100000)
plt.ylim(0,0.15) 
 
#create legend
plt.legend(loc="upper left")
 
#save figure to png
plt.savefig("graph-avl.png")

